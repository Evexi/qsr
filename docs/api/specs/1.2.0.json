{
  "openapi": "3.0.0",
  "info": {
    "title": "Order API",
    "version": "1.2.0",
    "description": "OpenAPI Documentation for the order service\n\n# Change Log\n\n## What's New\n---\n\n* Added new field `total_price` to order item which represent the full price of 1 item in cents/pennies (inclusive of it's modifiers)\n* New endpoint `/orders/{order}/export` to generate and download a CSV report\n",
    "contact": {
      "name": "Evexi Team"
    }
  },
  "servers": [
    {
      "url": "https://example.com",
      "description": "Example"
    }
  ],
  "paths": {
    "/orders": {
      "get": {
        "summary": "List Orders",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Example response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Pagination",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "default": 1
                        },
                        "limit": {
                          "type": "integer",
                          "default": 50,
                          "description": "Field omitted when value it zero"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Field omitted when value it zero"
                        }
                      }
                    },
                    {
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Order"
                          }
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-orders",
        "description": "List orders",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Search through orders"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "since",
            "description": "Filter orders since specified datetime (RFC 3339)"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "processing",
                  "completed",
                  "cancelled"
                ]
              },
              "uniqueItems": true
            },
            "in": "query",
            "name": "status",
            "description": "Filter by statuses"
          }
        ]
      },
      "post": {
        "summary": "Create Order",
        "operationId": "post-orders",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "X-Resource-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Order ID"
              },
              "X-Order-Number": {
                "schema": {
                  "type": "integer"
                },
                "description": "Generated Order Number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "examples": {
                  "ValidationError": {
                    "value": {
                      "type": "ValidationError",
                      "title": "Invalid Request",
                      "violations": [
                        {
                          "field": "name",
                          "message": "required"
                        },
                        {
                          "field": "payment_reference",
                          "message": "exceeds 50 characters"
                        }
                      ]
                    }
                  },
                  "DecodeError": {
                    "value": {
                      "type": "DecodeError",
                      "title": "Unable to decode request body as JSON"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Order"
        ],
        "description": "Creates an order\n\nNote that successive request with the same `payment_reference` won't create new entries, instead it will treat the request as a duplicate and return a `201 Created` with the previously created order id and number",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_reference": {
                    "type": "string",
                    "description": "Should be unique for a location",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Contains user defined fields. Max 65,535 characters in size"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "title": "OrderItem",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25
                        },
                        "variation": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "quantity": {
                          "type": "integer",
                          "maximum": 2147483647,
                          "minimum": 1
                        },
                        "total_price": {
                          "type": "integer",
                          "description": "In cents/pennies",
                          "nullable": true
                        },
                        "modifiers": {
                          "description": "Contains user defined fields. Max 65,535 characters in size",
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {}
                            },
                            {
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "quantity"
                      ]
                    }
                  }
                },
                "required": [
                  "payment_reference",
                  "items"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/orders/{order}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "order",
          "in": "path",
          "required": true,
          "description": "Order ID"
        }
      ],
      "get": {
        "summary": "Get Order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-orders-order",
        "description": "Gets an order"
      },
      "put": {
        "summary": "Update Order Status",
        "operationId": "put-orders-order",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request\n\nMeans query parameter `status` is invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Updates order status",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/OrderStatus"
          }
        ]
      },
      "delete": {
        "summary": "Delete Order",
        "operationId": "delete-orders-order",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Order"
        ],
        "description": "Deletes an order"
      }
    },
    "/orders/overview": {
      "get": {
        "summary": "Order Overview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOverview"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-orders-overview",
        "description": "Get an overview of orders since specified datetime",
        "tags": [
          "Overview"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "since",
            "description": "Datetime from which to filter records (RFC 3339)"
          }
        ]
      }
    },
    "/socket": {
      "get": {
        "summary": "WebSocket Connect",
        "tags": [
          "Websocket"
        ],
        "responses": {
          "101": {
            "description": "Switching Protocols",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketEvent"
                },
                "examples": {
                  "Order Created": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "create",
                        "when": "2022-04-20T06:38:57.660333548Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 2,
                          "payment_reference": "uniqueref",
                          "status": "pending",
                          "created_at": "2022-04-20T06:38:57.660333548Z",
                          "items": [
                            {
                              "id": "8e3b3f98-c074-11ec-b74b-82aa4796ca59",
                              "name": "Cappucino",
                              "variation": "Small",
                              "quantity": 0,
                              "modifiers": {
                                "sugar": "small",
                                "milk": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "Order Updated": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "update",
                        "when": "2022-04-20T07:03:45.754071213Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 3,
                          "payment_reference": "uniqueref",
                          "status": "processing",
                          "created_at": "2022-04-20T06:38:57.660333548Z"
                        }
                      }
                    }
                  },
                  "Order Deleted": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "delete",
                        "when": "2022-04-20T06:47:09.101388067Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 2,
                          "payment_reference": "uniqueref",
                          "status": "processing",
                          "created_at": "2022-04-20T06:38:57.660333548Z"
                        }
                      }
                    }
                  },
                  "Order Overview": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "overview",
                        "when": "2022-04-20T06:47:09.101388067Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "pending": 1,
                          "processing": 0,
                          "completed": 10,
                          "cancelled": 2
                        }
                      }
                    }
                  },
                  "Pong": {
                    "value": {
                      "action": "ping"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-socket",
        "description": "Establishes a websocket connection to receive events whether orders are created, updated or deleted\n\n**IMPORTANT**: Please use new socket endpoints to establish a connection",
        "security": [
          {
            "QueryAPIKey": []
          }
        ],
        "x-internal": false,
        "deprecated": true
      }
    },
    "/sockets": {
      "post": {
        "summary": "Request Connection",
        "operationId": "post-sockets",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "socket": {
                      "type": "string",
                      "description": "Connection ID"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "In seconds"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Websocket"
        ],
        "description": "Requests a new websocket connection.\n\nThe generated socket connection id last for a short time (expires if not used) and can only be used once.",
        "x-internal": true
      }
    },
    "/sockets/{socket}": {
      "get": {
        "summary": "Establish Connection",
        "tags": [
          "Websocket"
        ],
        "responses": {
          "101": {
            "description": "Switching Protocols",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketEvent"
                },
                "examples": {
                  "Order Created": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "create",
                        "when": "2022-04-20T06:38:57.660333548Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 2,
                          "payment_reference": "uniqueref",
                          "status": "pending",
                          "created_at": "2022-04-20T06:38:57.660333548Z",
                          "items": [
                            {
                              "id": "8e3b3f98-c074-11ec-b74b-82aa4796ca59",
                              "name": "Cappucino",
                              "variation": "Small",
                              "quantity": 0,
                              "modifiers": {
                                "sugar": "small",
                                "milk": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "Order Updated": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "update",
                        "when": "2022-04-20T07:03:45.754071213Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 3,
                          "payment_reference": "uniqueref",
                          "status": "processing",
                          "created_at": "2022-04-20T06:38:57.660333548Z"
                        }
                      }
                    }
                  },
                  "Order Deleted": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "delete",
                        "when": "2022-04-20T06:47:09.101388067Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                          "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                          "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                          "number": 2,
                          "payment_reference": "uniqueref",
                          "status": "processing",
                          "created_at": "2022-04-20T06:38:57.660333548Z"
                        }
                      }
                    }
                  },
                  "Order Overview": {
                    "value": {
                      "action": "message",
                      "data": {
                        "event": "overview",
                        "when": "2022-04-20T06:47:09.101388067Z",
                        "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                        "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                        "resource": {
                          "pending": 1,
                          "processing": 0,
                          "completed": 10,
                          "cancelled": 2
                        }
                      }
                    }
                  },
                  "Pong": {
                    "value": {
                      "action": "ping"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sockets-circuit",
        "description": "Establishes a websocket connection to receive events whether orders are created, updated or deleted\n\n### Keeping Connection Alive\n\nTo keep the websocket connection alive, the client will need to periodically send `ping` message with the below format. it will be considered stale if no ping is sent for 30 seconds and will then be evicted. The service will reply back with a `pong` message.\n\n#### Client ping\n```\n{\n  \"action\": \"ping\"\n}\n```\n\n#### Server reply\n```\n{\n  \"action\": \"pong\"\n}\n```\n\n\n### Event messages\n\nyou can view the schema and examples of event messages at the bottom in the response section.\n\n#### Type of event messages\n\n* Order Created\n* Order Updated\n* Order Deleted\n\n\n##### Note\n\nFor each of the order events an `overview` message will be sent down as well to provide an updated overview of orders",
        "security": [],
        "x-internal": true
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "socket",
          "in": "path",
          "required": true,
          "description": "Socket Connection ID"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "title": "Order",
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "client_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "Automatically generated and keeps incrementing for the day",
            "readOnly": true
          },
          "payment_reference": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "RFC 3339 format",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "RFC 3339 format. Field omitted when not set.",
            "format": "date-time",
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "description": "Contains user defined fields. Max 65,535 characters in size"
          },
          "items": {
            "type": "array",
            "description": "Field omitted when empty",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        },
        "required": [
          "payment_reference",
          "items"
        ]
      },
      "OrderItem": {
        "title": "OrderItem",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "variation": {
            "type": "string",
            "maxLength": 255
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total_price": {
            "type": "integer",
            "description": "In cents/pennies.\n\nField not sent if empty (0 or null).",
            "nullable": true
          },
          "modifiers": {
            "description": "Contains user defined fields. Max 65,535 characters in size",
            "oneOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "name",
          "quantity"
        ]
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "default": 50,
            "description": "Field omitted when value it zero"
          },
          "total": {
            "type": "integer",
            "description": "Field omitted when value it zero"
          }
        }
      },
      "OrderStatus": {
        "type": "string",
        "title": "Status",
        "enum": [
          "pending",
          "processing",
          "completed",
          "cancelled"
        ]
      },
      "OrderOverview": {
        "title": "OrderOverview",
        "type": "object",
        "properties": {
          "pending": {
            "type": "integer"
          },
          "processing": {
            "type": "integer"
          },
          "completed": {
            "type": "integer"
          },
          "cancelled": {
            "type": "integer"
          }
        },
        "description": ""
      },
      "SocketEvent": {
        "title": "SocketEvent",
        "type": "object",
        "x-examples": {
          "Order Created": {
            "action": "message",
            "data": {
              "event": "create",
              "when": "2022-04-20T06:38:57.660333548Z",
              "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
              "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
              "resource": {
                "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                "number": 2,
                "payment_reference": "uniqueref",
                "status": "pending",
                "created_at": "2022-04-20T06:38:57.660333548Z",
                "items": [
                  {
                    "id": "8e3b3f98-c074-11ec-b74b-82aa4796ca59",
                    "name": "Cappucino",
                    "variation": "Small",
                    "quantity": 0,
                    "modifiers": {
                      "sugar": "small",
                      "milk": true
                    }
                  }
                ]
              }
            }
          },
          "Order Updated": {
            "action": "message",
            "data": {
              "event": "update",
              "when": "2022-04-20T07:03:45.754071213Z",
              "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
              "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
              "resource": {
                "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                "number": 3,
                "payment_reference": "uniqueref",
                "status": "processing",
                "created_at": "2022-04-20T06:38:57.660333548Z"
              }
            }
          },
          "Order Deleted": {
            "action": "message",
            "data": {
              "event": "delete",
              "when": "2022-04-20T06:47:09.101388067Z",
              "client": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
              "location": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
              "resource": {
                "id": "8e3ad8b1-c074-11ec-b74b-82aa4796ca59",
                "client_id": "93bf7ed6-bfd8-11ec-a312-82aa4796ca59",
                "location_id": "a0bd0882-bfd8-11ec-a35e-82aa4796ca59",
                "number": 2,
                "payment_reference": "uniqueref",
                "status": "processing",
                "created_at": "2022-04-20T06:38:57.660333548Z"
              }
            }
          },
          "Pong": {
            "action": "ping"
          }
        },
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "message",
              "ping",
              "pong"
            ]
          },
          "data": {
            "type": "object",
            "description": "Omitted when not set",
            "properties": {
              "event": {
                "type": "string",
                "enum": [
                  "create",
                  "update",
                  "delete",
                  "overview"
                ]
              },
              "when": {
                "type": "string",
                "description": "RFC 3339 format"
              },
              "client": {
                "type": "string",
                "format": "uuid"
              },
              "location": {
                "type": "string",
                "format": "uuid"
              },
              "resource": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/OrderOverview"
                  },
                  {
                    "$ref": "#/components/schemas/Order"
                  }
                ]
              }
            }
          }
        },
        "required": [
          "action"
        ]
      },
      "ValidationError": {
        "title": "ValidationError",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "array",
                "description": "Omitted when empty",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "x-examples": {}
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "x-examples": {}
      }
    },
    "securitySchemes": {
      "HeaderAPIKey": {
        "name": "x-api-key",
        "type": "apiKey",
        "in": "header",
        "description": "The provided API key will be linked to your client and a specific location. \nMultiple locations can be created so that you can make use of the API from different location and filter the orders accordingly"
      },
      "QueryAPIKey": {
        "name": "api_key",
        "type": "apiKey",
        "in": "query",
        "description": "This is just an alternative way to specify the API key for use when establishing a websocket connection"
      }
    },
    "responses": {
      "Orders": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Pagination",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "default": 1
                    },
                    "limit": {
                      "type": "integer",
                      "default": 50,
                      "description": "Field omitted when value it zero"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Field omitted when value it zero"
                    }
                  }
                },
                {
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "title": "Order",
                        "type": "object",
                        "x-examples": {},
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "client_id": {
                            "type": "string",
                            "readOnly": true
                          },
                          "location_id": {
                            "type": "string",
                            "readOnly": true
                          },
                          "number": {
                            "type": "string",
                            "description": "Field omitted when zero",
                            "readOnly": true
                          },
                          "payment_reference": {
                            "type": "string",
                            "description": "Field omitted when not set"
                          },
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "cancelled"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "readOnly": true
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Field omitted when not set",
                            "readOnly": true
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Contains user defined fields"
                          },
                          "items": {
                            "type": "array",
                            "description": "Field omitted when empty",
                            "items": {
                              "title": "OrderItem",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string"
                                },
                                "variation": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                },
                                "unit_price": {
                                  "type": "integer",
                                  "description": "Field not sent if empty (0 or null)",
                                  "nullable": true
                                },
                                "modifiers": {
                                  "type": "object",
                                  "description": "Contains user defined fields"
                                }
                              },
                              "required": [
                                "name",
                                "quantity"
                              ]
                            }
                          }
                        },
                        "required": [
                          "items"
                        ]
                      }
                    }
                  }
                }
              ],
              "type": "object"
            },
            "examples": {
              "example-1": {
                "value": {
                  "page": 1,
                  "limit": 50,
                  "total": 0,
                  "orders": [
                    {
                      "id": "string"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "OrderStatus": {
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "pending",
            "processing",
            "completed",
            "cancelled"
          ]
        }
      }
    }
  },
  "tags": [
    {
      "name": "Order"
    },
    {
      "name": "Overview"
    },
    {
      "name": "Websocket"
    }
  ],
  "security": [
    {
      "HeaderAPIKey": []
    }
  ]
}